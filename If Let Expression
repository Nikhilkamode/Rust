What Is an if let Expression?
if let is a conditional expression that allows pattern matching. The block of code in the construct executes if the pattern in the condition matches with that of scrutinee expression.

Case 1: When the Pattern is Matched
In the example below the defined pattern matches with the scrutinee expression.

fn main() {
    // define a scrutinee expression    
    let course = ("Rust", "beginner","course");
    // pattern matches with the scrutinee expression
    if let ("Rust", "beginner","course") = course {
        println!("Wrote all values in pattern to be matched with the scrutinee expression");
    } else {
        // do not execute this block
        println!("Value unmatched");
    }
}

Output
Wrote all values in pattern to be matched with the scrutinee expression

fn main() {
    // define a scrutinee expression    
    let course = ("Rust", "beginner","course");
    // pattern matches with the scrutinee expression
    if let ("Rust", "beginner", c) = course {
        println!("Wrote first two values in pattern to be matched with the scrutinee expression : {}", c);
    } 
    else {
        // do not execute this block
        println!("Value unmatched");
    }
}

Output
Wrote first two values in pattern to be matched with the scrutinee expression : course

fn main() {
    // define a scrutinee expression     
    let course = ("Rust", "beginner","course");
    // pattern matches with the scrutinee expression
    if let ("Rust", c, d) = course {
        println!("Wrote one value in pattern to be matched with the scrutinee expression.Guessed values: {}, {}",c,d);
    } else {
        // do not execute this block
        println!("Value unmatched");
    }
}

Output
Wrote one value in pattern to be matched with the scrutinee expression.Guessed values: beginner, course

Case 2: When the Pattern is Not Matched
In the example below, the defined pattern does not match with the scrutinee expression so the statement in the else block gets executed.

fn main() {
    // define a scrutinee expression     
    let course = ("Rust", "beginner");
    // pattern does not match with the scrutinee expression
    if let ("Java", c) = course {
        println!("Course is {}", c);
    } else {
        // execute this block
        println!("Value unmatched");
    }
}

Output
Value unmatched

Case 3: When the Pattern is Replaced With _
In the example below, the pattern is not defined. Rather it is replaced with an _. In this case, the statement within the if let block executes.

Note: A warning, ⚠️, is generated by the compiler because the Rust compiler complains that it doesn’t make sense to use if let with an irrefutable pattern.

Output
fn main() {
    // no pattern is define
    if let _ = 10 {
        println!("irrefutable if-let pattern is always executed");
    }
}

